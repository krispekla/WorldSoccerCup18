<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbDetailsPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAUFQTFRF////
        /2lV8MiRZEZL5rR9yFBQ/7430qBz/8I1/2ZW/8A2/2hV/8M15a9zxE5Q/2RW+vLo/4tKxEZR9ItnxkhN
        78SI+rQ59c2UWTtGXz9EYEJJxkZHWjc96LmA/2RP5mRW/3pQ6F5T/29TVTA2/7I8+GZUm3pm46+q/1tD
        0qR1/5dG/3VR3qx54KJ1/7Q7zWNY1VZR/6ZB/4JN/59D0GJN86g93a9+/ce/sKSm9dq55eHi/5RH/Pbv
        3LaH21lSbE9UzMTF+enX1HFe7Z1A8tKn/dLL/o18/sK5/puN35Zu+KCV/uHc6YxF0otp/nxp/q2h02xp
        24yK46Wjf2BY23pIwp5568XD0nVywzY114RnfGRo1m9Kjm5ftaqs0MnKk4GE4odF6sGW8NPRzqmAq4pu
        n5KWd15i2Z6A69TA/rar4sKmGIFDuwAADsFJREFUeF7tnXtf08gagClQaJPSAFtoKW3lbgt4AVZUKIKI
        iiKuq+IFRVYFV8/3/wDnncybNJ1Mrp3MRH77/LP+OJCZp+9lJsnA6ZPD1pezy/PT3YGBgd3d3dPzy3t7
        X7bwf7oK7J3vztempqbAjwL/rgEDP87ProDo1mWt1nFjANP52unl3m+suXU+76lnQTSnfvymmmfBfha/
        ZzRPazj9kJDyhGiebbXxAilnazd0ALsAzfnq6fnZ3lbKA9p2NM/oYLut7Z6enn/BK6aNmBF0MTW1i1dM
        GaeCBIH5VGbrvYhNxo+pe3hR9WztXZ4OzJuIiyAYnuL1VXN2Cr1epJnNFI6glssp781Zr6ShEM+S0wNq
        eziMMrZ+COwrHJS3mj2hfYXD1DmOpIh78ziR5PiBQ6nhMnlBtc1UQgSh1Si82diTIahyudiSIjhQU2co
        cH/th7oF8SzZddCmdoYDSkeS4EBN1ZIv8hbJl6lLHFE2OH7yqNrU7MkKoTLDczmNFFB1DywthKoMt+QZ
        Ktp6n0lL0oGqmgeK8spwYECNoaQdGwXHlAt5oysNHFMuOLYU1NwCy4xhDceUy3+GIlGTpT9wdBmoMZS5
        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
</value>
  </data>
</root>